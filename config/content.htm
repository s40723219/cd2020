<h1>weeks</h1>
<p>weel1~5</p>
<h2>week1~5</h2>
<p>week1</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/5HdJ7a4Bzdc" width="560"></iframe></p>
<p>建立自己的倉儲並管理網頁</p>
<p>git clone新建倉儲網址</p>
<p>git submodule add老師cmsimde的網址</p>
<p>到cmsimde裡面的up_dir，並將所有項目複製到cd2020</p>
<p>完成後用python wsgi.py 開始編輯網頁</p>
<p>week2</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ZMKNMympFY0" width="560"></iframe></p>
<p>組長進行直播，並分配工作<br/>組長講的重點<br/>1.作業一必須在3/26前完成，並上傳pdf檔到個人倉儲的download上。</p>
<p>2.每周務必上傳進度。</p>
<p>3.不會做的可以問會的同學或在gitter上發問。</p>
<p>4.請依每個人的作業一pdf檔、網站內容，進行互評。</p>
<p>我被分配到的工作是讓<span style="color: #ff0000;">系統可以使用最新的Python 3.8.2</span></p>
<p><strong>讓系統可以使用最新的Python 3.8.2</strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/jP2vDp6VQFs" width="560"></iframe></strong></p>
<p>首先建立一資料夾cd2020，進去裡面建立data，並在data裡建立py382及wscite432、portablegit</p>
<p>去python的官網</p>
<p>https://www.python.org/</p>
<p>並在下載區找到windows並選取Latest Python 3 Release - Python 3.8.2</p>
<p>找到Windows x86-64 executable installer並下載到py382裡</p>
<p>下載時將pip的選項取消</p>
<p>再去下載SciTE系統 full 64-bit download，並放到data裡的wscite432</p>
<p>建立start.bat</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=y
subst %Disk%: "data"

%Disk%:

set HomePath=%Disk%:\home
set HomeDrive=%Disk%:\home
set Home=%Disk%:\home
set USERPROFILE=%Disk%:\home

REM 將系統 Python 程式的 io 設為 utf-8
set PYTHONIOENCODING="utf-8"

#REM for putty
#Set GIT_HOME=%CDisk%:\portablegit\bin\
#Set GIT_SSH=%Disk%:\putty\plink.exe

set PYTHONPATH=%Disk%:\py382\DLLs;%Disk%:\py382\Lib;%Disk%:\py382\Lib\site-packages;
set PYTHONHOME=%Disk%:\py382

set path_python=%Disk%:\py382;%Disk%:\py382\Scripts;
set path_msys2=%Disk%:\msys64\mingw64\bin;
set path_git=%Disk%:\portablegit\bin;
set path_tcc=%Disk%:\tcc;

path=%Disk%:;%path_python%;%path_msys2%;%path_git%;%path_tcc%;

start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe

start /MIN %Disk%:\wscite432\wscite\SciTE.exe
start /MIN %Disk%:\wscite432\wscite\SciTE.exe

Exit

</pre>
<p><br/><br/>建立stop.bat</p>
<p></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=y
path=%PATH%;

taskkill /IM python.exe /F
taskkill /IM pythonw.exe /F
taskkill /IM scite.exe /F

REM 終止虛擬硬碟與目錄的對應
subst %Disk%: /D
REM 關閉 cmd 指令視窗
taskkill /IM cmd.exe /F

EXIT</pre>
<p><br/>下載msys2-x86_64-20190524.exe 到data裡</p>
<p>下載64-bit Git for Windows Portable 至 portablegit裡</p>
<p>到https://bootstrap.pypa.io/get-pip.py頁面，安裝pip並另存新檔到data下</p>
<p>執行python get-pip.py和pip install flask bs4 lmxl pelican markdown flask_cors leo指令，將python3.8.2版本缺少的模組補齊</p>
<p>week3</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/VqRrlr_VapI" width="560"></iframe></p>
<p>目前進度</p>
<h1>Assignment</h1>
<h2>Assignment1</h2>
<p>Random grouping</p>
<p>Portable system</p>
<p>Four wheel car</p>
<p></p>
<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>