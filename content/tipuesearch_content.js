var tipuesearch = {"pages": [{'title': 'weeks', 'text': 'week1~5', 'tags': '', 'url': 'weeks.html'}, {'title': 'week1~5', 'text': 'week1 \n \n 建立自己的倉儲並管理網頁 \n git clone新建倉儲網址 \n git submodule add老師cmsimde的網址 \n 到cmsimde裡面的up_dir，並將所有項目複製到cd2020 \n 完成後用python wsgi.py 開始編輯網頁 \n week2 \n \n 組長進行直播，並分配工作 組長講的重點 1.作業一必須在3/26前完成，並上傳pdf檔到個人倉儲的download上。 \n 2.每周務必上傳進度。 \n 3.不會做的可以問會的同學或在gitter上發問。 \n 4.請依每個人的作業一pdf檔、網站內容，進行互評。 \n 我被分配到的工作是讓 系統可以使用最新的Python 3.8.2 \n 讓系統可以使用最新的Python 3.8.2 \n \n 首先建立一資料夾cd2020，進去裡面建立data，並在data裡建立py382及wscite432、portablegit \n 去python的官網 \n https://www.python.org/ \n 並在下載區找到windows並選取Latest Python 3 Release - Python 3.8.2 \n 找到Windows x86-64 executable installer並下載到py382裡 \n 下載時將pip的選項取消 \n 再去下載SciTE系統 full 64-bit download，並放到data裡的wscite432 \n 建立start.bat \n @echo off\nset Disk=y\nsubst %Disk%: "data"\n\n%Disk%:\n\nset HomePath=%Disk%:\\home\nset HomeDrive=%Disk%:\\home\nset Home=%Disk%:\\home\nset USERPROFILE=%Disk%:\\home\n\nREM 將系統 Python 程式的 io 設為 utf-8\nset PYTHONIOENCODING="utf-8"\n\n#REM for putty\n#Set GIT_HOME=%CDisk%:\\portablegit\\bin\\\n#Set GIT_SSH=%Disk%:\\putty\\plink.exe\n\nset PYTHONPATH=%Disk%:\\py382\\DLLs;%Disk%:\\py382\\Lib;%Disk%:\\py382\\Lib\\site-packages;\nset PYTHONHOME=%Disk%:\\py382\n\nset path_python=%Disk%:\\py382;%Disk%:\\py382\\Scripts;\nset path_msys2=%Disk%:\\msys64\\mingw64\\bin;\nset path_git=%Disk%:\\portablegit\\bin;\nset path_tcc=%Disk%:\\tcc;\n\npath=%Disk%:;%path_python%;%path_msys2%;%path_git%;%path_tcc%;\n\nstart /MIN cmd.exe\nstart /MIN cmd.exe\nstart /MIN cmd.exe\nstart /MIN cmd.exe\n\nstart /MIN %Disk%:\\wscite432\\wscite\\SciTE.exe\nstart /MIN %Disk%:\\wscite432\\wscite\\SciTE.exe\n\nExit\n\n \n 建立stop.bat \n \n @echo off\nset Disk=y\npath=%PATH%;\n\ntaskkill /IM python.exe /F\ntaskkill /IM pythonw.exe /F\ntaskkill /IM scite.exe /F\n\nREM 終止虛擬硬碟與目錄的對應\nsubst %Disk%: /D\nREM 關閉 cmd 指令視窗\ntaskkill /IM cmd.exe /F\n\nEXIT \n 下載msys2-x86_64-20190524.exe 到data裡 \n 下載64-bit Git for Windows Portable 至 portablegit裡 \n 到https://bootstrap.pypa.io/get-pip.py頁面，安裝pip並另存新檔到data下 \n 執行python get-pip.py和pip install flask bs4 lmxl pelican markdown flask_cors leo指令，將python3.8.2版本缺少的模組補齊 \n week3 \n \n 目前進度 \n', 'tags': '', 'url': 'week1~5.html'}, {'title': 'Assignment', 'text': '', 'tags': '', 'url': 'Assignment.html'}, {'title': 'Assignment1', 'text': 'Random grouping \n  Can we write this program as an App and save the result to remote database? \n 要進行亂數分組，要利用到python的模組 \n 1.Random 從範圍中有統一的選擇。對於序列，存在隨機元素的統一選擇，用於生成列表的隨機劃分的函數，以及使用隨機抽樣而無需替換的函數。 import  random  #  生成第一個隨機數 print  " random() :  " ,  random . random () \n 參考文獻 https://www.runoob.com/python/func-number-random.html \n 2.for 循環 可以遍歷任何序列的項目，如一個列表或一個字符串。 參考文獻 https://www.runoob.com/python/python-for-loop.html 3. shuffle 方法将序列的所有元素随机排序 import \xa0random  list\xa0=\xa0[20,\xa016,\xa010,\xa05]  random.shuffle(list)   print \xa0"隨機排列表 : ",\xa0\xa0list  random.shuffle(list)   print \xa0"隨機排列表 : ",\xa0\xa0list \n 參考文獻 https://www.runoob.com/python/func-number-shuffle.html \n 3. Python len()  方法返回對象（字符，列表，元組等）的長度或項目個數 \n >>> str  =  " runoob "  >>>  len ( str )  #  字符串長度  6  >>>  l  =  [ 1 , 2 , 3 , 4 , 5 ]  >>>  len ( l )  #  列表元素個數   \n 參考文獻 https://www.runoob.com/python/att-string-len.html \n 4. int 內建型態(Built-in Types)可以在Python程式中直接使用, 不必預先import模組. 在 Python 中宣告變數後可直接指定一個特定值, 其變數型態自動設定為設定值的型態 \n #  宣告一個整數 a =100 print ( a ) print ( \' 型態 :\' ,  type ( a )) print ( \'-\' *30 )參考文獻 https://www.runoob.com/python/python-func-int.html \n \n Portable system \n 首先建立一資料夾cd2020，進去裡面建立data，並在data裡建立py382及wscite432、portablegit \n 去python的官網https://www.python.org/ \n 並在下載區找到windows並選取Latest Python 3 Release - Python 3.8.2 \n 找到Windows x86-64 executable installer並下載到py382裡 \n 下載時將pip的選項取消 \n 再去下載SciTE系統 full 64-bit download，並放到data裡的wscite432\xa0 \n 建立start.bat \n \n 建立stop.bat \n \n 下載msys2-x86_64-20190524.exe 到data裡 \n 下載64-bit Git for Windows Portable 至 portablegit裡 \n 到https://bootstrap.pypa.io/get-pip.py頁面，安裝pip並另存新檔到data下 \n 執行python get-pip.py和pip install flask bs4 lmxl pelican markdown flask_cors leo指令，將python3.8.2版本缺少的模組補齊 \n Four wheel car \n BubbleRob tutorial \n 是在設計簡單的移動機器人BubbleRob，並在設計時嘗試介紹很多CoppeliaSim功能。教程將跨越許多不同的方面，因此請確保也看看其他教程，主要是有關構建仿真模型的教程。有建立模型，設置感測器，建立障礙物並測試其感測功能，讓其繞過障礙物，調整期使寸大小及物理屬性 \n Line following BubbleRob tutorial \n 旨在擴展BubbleRob的功能，以使其遵循的規則。確保您已經閱讀並理解了第一個BubbleRob教程。微調整其視覺感應器，並設置視覺回調函數，設置絕對坐標，構建機器人遵循的路徑 \n External controller tutorial \n 此教程說明好幾種方式能從外部控制機器人及模擬機器人，最方便的就是編寫程式碼直接附加到場景；您需要從外部應用程序，機器人或另一台計算機運行控制代碼，這是一種非常便捷的方法。這也使您可以使用與運行真實機器人完全相同的代碼來控制仿真或模型（例如虛擬機器人） \n Simulation dialog \n \n \n 時間：模擬時間。每次執行主腳本時，仿真時間都會增加仿真時間步長。 \n 每幀模擬遍數：一個渲染遍的模擬遍數。值為10表示刷新屏幕之前，主腳本已執行10次。如果您的圖形卡較慢，則可以選擇僅顯示兩幅中的一幅。 \n 當仿真時間高於以下時間時暫停：允許指定暫停仿真的仿真時間。 \n 腳本錯誤暫停：如果啟用，則在腳本錯誤發生時暫停仿真。 \n 模擬開始時全屏：如果啟用，則模擬以全屏模式開始。 \n 實時仿真，倍增係數：如果選擇，則仿真時間將嘗試跟隨實時。 X的乘數將使仿真運行比實時快X倍。 \n 在落後時嘗試趕上  :  模擬時間將嘗試趕上損失的時間，從而明顯加快速度。 \n 將場景重置為初始狀態  :  選中後，所有對像都將重置為其初始狀態 \n 刪除新對象  :  選中後，在仿真運行期間添加的場景對象將在仿真結束時被刪除 \n \n Simulation \n \n 進行模擬測試是為了要確保機器能照理想狀態正常運作，或者測試機器的耐用性及安全性，其中也講解了在模擬過程可能會發生的狀況及解決方法，像是模擬速度調高或調慢，會造成不穩定或不準確的模擬。 \n', 'tags': '', 'url': 'Assignment1.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.', 'tags': '', 'url': 'Develop.html'}]};